
STM32F446xx_Drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006e8  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080008ac  080008b4  000018b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080008ac  080008ac  000018b4  2**0
                  CONTENTS
  4 .ARM          00000000  080008ac  080008ac  000018b4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080008ac  080008b4  000018b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080008ac  080008ac  000018ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080008b0  080008b0  000018b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000018b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080008b4  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080008b4  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000018b4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000e70  00000000  00000000  000018de  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000031a  00000000  00000000  0000274e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000e8  00000000  00000000  00002a68  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000a4  00000000  00000000  00002b50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000f38  00000000  00000000  00002bf4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001182  00000000  00000000  00003b2c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000936e  00000000  00000000  00004cae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000e01c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000002ec  00000000  00000000  0000e060  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000075  00000000  00000000  0000e34c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000894 	.word	0x08000894

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000894 	.word	0x08000894

08000204 <GPIO_BASEADDR_TO_CODE>:
#define DISABLE 0
#define ENABLE  1


static inline uint8_t GPIO_BASEADDR_TO_CODE(GPIO_Reg_Def_t *pGPIOx)
{
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]
	if       (pGPIOx == GPIOA) return 0;
 800020c:	687b      	ldr	r3, [r7, #4]
 800020e:	4a1a      	ldr	r2, [pc, #104]	@ (8000278 <GPIO_BASEADDR_TO_CODE+0x74>)
 8000210:	4293      	cmp	r3, r2
 8000212:	d101      	bne.n	8000218 <GPIO_BASEADDR_TO_CODE+0x14>
 8000214:	2300      	movs	r3, #0
 8000216:	e02a      	b.n	800026e <GPIO_BASEADDR_TO_CODE+0x6a>
	else if  (pGPIOx == GPIOB) return 1;
 8000218:	687b      	ldr	r3, [r7, #4]
 800021a:	4a18      	ldr	r2, [pc, #96]	@ (800027c <GPIO_BASEADDR_TO_CODE+0x78>)
 800021c:	4293      	cmp	r3, r2
 800021e:	d101      	bne.n	8000224 <GPIO_BASEADDR_TO_CODE+0x20>
 8000220:	2301      	movs	r3, #1
 8000222:	e024      	b.n	800026e <GPIO_BASEADDR_TO_CODE+0x6a>
	else if  (pGPIOx == GPIOC) return 2;
 8000224:	687b      	ldr	r3, [r7, #4]
 8000226:	4a16      	ldr	r2, [pc, #88]	@ (8000280 <GPIO_BASEADDR_TO_CODE+0x7c>)
 8000228:	4293      	cmp	r3, r2
 800022a:	d101      	bne.n	8000230 <GPIO_BASEADDR_TO_CODE+0x2c>
 800022c:	2302      	movs	r3, #2
 800022e:	e01e      	b.n	800026e <GPIO_BASEADDR_TO_CODE+0x6a>
	else if  (pGPIOx == GPIOD) return 3;
 8000230:	687b      	ldr	r3, [r7, #4]
 8000232:	4a14      	ldr	r2, [pc, #80]	@ (8000284 <GPIO_BASEADDR_TO_CODE+0x80>)
 8000234:	4293      	cmp	r3, r2
 8000236:	d101      	bne.n	800023c <GPIO_BASEADDR_TO_CODE+0x38>
 8000238:	2303      	movs	r3, #3
 800023a:	e018      	b.n	800026e <GPIO_BASEADDR_TO_CODE+0x6a>
	else if  (pGPIOx == GPIOE) return 4;
 800023c:	687b      	ldr	r3, [r7, #4]
 800023e:	4a12      	ldr	r2, [pc, #72]	@ (8000288 <GPIO_BASEADDR_TO_CODE+0x84>)
 8000240:	4293      	cmp	r3, r2
 8000242:	d101      	bne.n	8000248 <GPIO_BASEADDR_TO_CODE+0x44>
 8000244:	2304      	movs	r3, #4
 8000246:	e012      	b.n	800026e <GPIO_BASEADDR_TO_CODE+0x6a>
	else if  (pGPIOx == GPIOF) return 5;
 8000248:	687b      	ldr	r3, [r7, #4]
 800024a:	4a10      	ldr	r2, [pc, #64]	@ (800028c <GPIO_BASEADDR_TO_CODE+0x88>)
 800024c:	4293      	cmp	r3, r2
 800024e:	d101      	bne.n	8000254 <GPIO_BASEADDR_TO_CODE+0x50>
 8000250:	2305      	movs	r3, #5
 8000252:	e00c      	b.n	800026e <GPIO_BASEADDR_TO_CODE+0x6a>
	else if  (pGPIOx == GPIOG) return 6;
 8000254:	687b      	ldr	r3, [r7, #4]
 8000256:	4a0e      	ldr	r2, [pc, #56]	@ (8000290 <GPIO_BASEADDR_TO_CODE+0x8c>)
 8000258:	4293      	cmp	r3, r2
 800025a:	d101      	bne.n	8000260 <GPIO_BASEADDR_TO_CODE+0x5c>
 800025c:	2306      	movs	r3, #6
 800025e:	e006      	b.n	800026e <GPIO_BASEADDR_TO_CODE+0x6a>
	else if  (pGPIOx == GPIOH) return 7;
 8000260:	687b      	ldr	r3, [r7, #4]
 8000262:	4a0c      	ldr	r2, [pc, #48]	@ (8000294 <GPIO_BASEADDR_TO_CODE+0x90>)
 8000264:	4293      	cmp	r3, r2
 8000266:	d101      	bne.n	800026c <GPIO_BASEADDR_TO_CODE+0x68>
 8000268:	2307      	movs	r3, #7
 800026a:	e000      	b.n	800026e <GPIO_BASEADDR_TO_CODE+0x6a>
	else                       return 0;
 800026c:	2300      	movs	r3, #0
}
 800026e:	4618      	mov	r0, r3
 8000270:	370c      	adds	r7, #12
 8000272:	46bd      	mov	sp, r7
 8000274:	bc80      	pop	{r7}
 8000276:	4770      	bx	lr
 8000278:	40020000 	.word	0x40020000
 800027c:	40020400 	.word	0x40020400
 8000280:	40020800 	.word	0x40020800
 8000284:	40020c00 	.word	0x40020c00
 8000288:	40021000 	.word	0x40021000
 800028c:	40021400 	.word	0x40021400
 8000290:	40021800 	.word	0x40021800
 8000294:	40021c00 	.word	0x40021c00

08000298 <GPIO_PeriClockControl>:
 *
 * @return            -None
 * */

void GPIO_PeriClockControl(GPIO_Reg_Def_t *pGPIOx, uint8_t EnorDi)
{
 8000298:	b480      	push	{r7}
 800029a:	b083      	sub	sp, #12
 800029c:	af00      	add	r7, sp, #0
 800029e:	6078      	str	r0, [r7, #4]
 80002a0:	460b      	mov	r3, r1
 80002a2:	70fb      	strb	r3, [r7, #3]

	if(EnorDi == ENABLE)
 80002a4:	78fb      	ldrb	r3, [r7, #3]
 80002a6:	2b01      	cmp	r3, #1
 80002a8:	d157      	bne.n	800035a <GPIO_PeriClockControl+0xc2>
	{
		if(pGPIOx == GPIOA)
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	4a59      	ldr	r2, [pc, #356]	@ (8000414 <GPIO_PeriClockControl+0x17c>)
 80002ae:	4293      	cmp	r3, r2
 80002b0:	d106      	bne.n	80002c0 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PERI_CLOCK_ENABLE();
 80002b2:	4b59      	ldr	r3, [pc, #356]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 80002b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002b6:	4a58      	ldr	r2, [pc, #352]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 80002b8:	f043 0301 	orr.w	r3, r3, #1
 80002bc:	6313      	str	r3, [r2, #48]	@ 0x30
		{
			GPIOH_PERI_CLOCK_DISABLE();
		}
	}

}
 80002be:	e0a3      	b.n	8000408 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOB)
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	4a56      	ldr	r2, [pc, #344]	@ (800041c <GPIO_PeriClockControl+0x184>)
 80002c4:	4293      	cmp	r3, r2
 80002c6:	d106      	bne.n	80002d6 <GPIO_PeriClockControl+0x3e>
			GPIOB_PERI_CLOCK_ENABLE();
 80002c8:	4b53      	ldr	r3, [pc, #332]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 80002ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002cc:	4a52      	ldr	r2, [pc, #328]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 80002ce:	f043 0302 	orr.w	r3, r3, #2
 80002d2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002d4:	e098      	b.n	8000408 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOC)
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	4a51      	ldr	r2, [pc, #324]	@ (8000420 <GPIO_PeriClockControl+0x188>)
 80002da:	4293      	cmp	r3, r2
 80002dc:	d106      	bne.n	80002ec <GPIO_PeriClockControl+0x54>
			GPIOC_PERI_CLOCK_ENABLE();
 80002de:	4b4e      	ldr	r3, [pc, #312]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 80002e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002e2:	4a4d      	ldr	r2, [pc, #308]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 80002e4:	f043 0304 	orr.w	r3, r3, #4
 80002e8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002ea:	e08d      	b.n	8000408 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOD)
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	4a4d      	ldr	r2, [pc, #308]	@ (8000424 <GPIO_PeriClockControl+0x18c>)
 80002f0:	4293      	cmp	r3, r2
 80002f2:	d106      	bne.n	8000302 <GPIO_PeriClockControl+0x6a>
			GPIOD_PERI_CLOCK_ENABLE();
 80002f4:	4b48      	ldr	r3, [pc, #288]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 80002f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002f8:	4a47      	ldr	r2, [pc, #284]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 80002fa:	f043 0308 	orr.w	r3, r3, #8
 80002fe:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000300:	e082      	b.n	8000408 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOE)
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	4a48      	ldr	r2, [pc, #288]	@ (8000428 <GPIO_PeriClockControl+0x190>)
 8000306:	4293      	cmp	r3, r2
 8000308:	d106      	bne.n	8000318 <GPIO_PeriClockControl+0x80>
			GPIOE_PERI_CLOCK_ENABLE();
 800030a:	4b43      	ldr	r3, [pc, #268]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 800030c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800030e:	4a42      	ldr	r2, [pc, #264]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 8000310:	f043 0310 	orr.w	r3, r3, #16
 8000314:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000316:	e077      	b.n	8000408 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOF)
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	4a44      	ldr	r2, [pc, #272]	@ (800042c <GPIO_PeriClockControl+0x194>)
 800031c:	4293      	cmp	r3, r2
 800031e:	d106      	bne.n	800032e <GPIO_PeriClockControl+0x96>
			GPIOF_PERI_CLOCK_ENABLE();
 8000320:	4b3d      	ldr	r3, [pc, #244]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 8000322:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000324:	4a3c      	ldr	r2, [pc, #240]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 8000326:	f043 0320 	orr.w	r3, r3, #32
 800032a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800032c:	e06c      	b.n	8000408 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOG)
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	4a3f      	ldr	r2, [pc, #252]	@ (8000430 <GPIO_PeriClockControl+0x198>)
 8000332:	4293      	cmp	r3, r2
 8000334:	d106      	bne.n	8000344 <GPIO_PeriClockControl+0xac>
			GPIOG_PERI_CLOCK_ENABLE();
 8000336:	4b38      	ldr	r3, [pc, #224]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 8000338:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800033a:	4a37      	ldr	r2, [pc, #220]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 800033c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000340:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000342:	e061      	b.n	8000408 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOH)
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	4a3b      	ldr	r2, [pc, #236]	@ (8000434 <GPIO_PeriClockControl+0x19c>)
 8000348:	4293      	cmp	r3, r2
 800034a:	d15d      	bne.n	8000408 <GPIO_PeriClockControl+0x170>
			GPIOH_PERI_CLOCK_ENABLE();
 800034c:	4b32      	ldr	r3, [pc, #200]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 800034e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000350:	4a31      	ldr	r2, [pc, #196]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 8000352:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000356:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000358:	e056      	b.n	8000408 <GPIO_PeriClockControl+0x170>
		if(pGPIOx == GPIOA)
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	4a2d      	ldr	r2, [pc, #180]	@ (8000414 <GPIO_PeriClockControl+0x17c>)
 800035e:	4293      	cmp	r3, r2
 8000360:	d106      	bne.n	8000370 <GPIO_PeriClockControl+0xd8>
			GPIOA_PERI_CLOCK_DISABLE();
 8000362:	4b2d      	ldr	r3, [pc, #180]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 8000364:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000366:	4a2c      	ldr	r2, [pc, #176]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 8000368:	f023 0301 	bic.w	r3, r3, #1
 800036c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800036e:	e04b      	b.n	8000408 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOB)
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	4a2a      	ldr	r2, [pc, #168]	@ (800041c <GPIO_PeriClockControl+0x184>)
 8000374:	4293      	cmp	r3, r2
 8000376:	d106      	bne.n	8000386 <GPIO_PeriClockControl+0xee>
			GPIOB_PERI_CLOCK_DISABLE();
 8000378:	4b27      	ldr	r3, [pc, #156]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 800037a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800037c:	4a26      	ldr	r2, [pc, #152]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 800037e:	f023 0302 	bic.w	r3, r3, #2
 8000382:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000384:	e040      	b.n	8000408 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOC)
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	4a25      	ldr	r2, [pc, #148]	@ (8000420 <GPIO_PeriClockControl+0x188>)
 800038a:	4293      	cmp	r3, r2
 800038c:	d106      	bne.n	800039c <GPIO_PeriClockControl+0x104>
			GPIOC_PERI_CLOCK_DISABLE();
 800038e:	4b22      	ldr	r3, [pc, #136]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 8000390:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000392:	4a21      	ldr	r2, [pc, #132]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 8000394:	f023 0304 	bic.w	r3, r3, #4
 8000398:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800039a:	e035      	b.n	8000408 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOD)
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	4a21      	ldr	r2, [pc, #132]	@ (8000424 <GPIO_PeriClockControl+0x18c>)
 80003a0:	4293      	cmp	r3, r2
 80003a2:	d106      	bne.n	80003b2 <GPIO_PeriClockControl+0x11a>
			GPIOD_PERI_CLOCK_DISABLE();
 80003a4:	4b1c      	ldr	r3, [pc, #112]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 80003a6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003a8:	4a1b      	ldr	r2, [pc, #108]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 80003aa:	f023 0308 	bic.w	r3, r3, #8
 80003ae:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003b0:	e02a      	b.n	8000408 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOE)
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	4a1c      	ldr	r2, [pc, #112]	@ (8000428 <GPIO_PeriClockControl+0x190>)
 80003b6:	4293      	cmp	r3, r2
 80003b8:	d106      	bne.n	80003c8 <GPIO_PeriClockControl+0x130>
			GPIOE_PERI_CLOCK_DISABLE();
 80003ba:	4b17      	ldr	r3, [pc, #92]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 80003bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003be:	4a16      	ldr	r2, [pc, #88]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 80003c0:	f023 0310 	bic.w	r3, r3, #16
 80003c4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003c6:	e01f      	b.n	8000408 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOF)
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	4a18      	ldr	r2, [pc, #96]	@ (800042c <GPIO_PeriClockControl+0x194>)
 80003cc:	4293      	cmp	r3, r2
 80003ce:	d106      	bne.n	80003de <GPIO_PeriClockControl+0x146>
			GPIOF_PERI_CLOCK_DISABLE();
 80003d0:	4b11      	ldr	r3, [pc, #68]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 80003d2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003d4:	4a10      	ldr	r2, [pc, #64]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 80003d6:	f023 0320 	bic.w	r3, r3, #32
 80003da:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003dc:	e014      	b.n	8000408 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOG)
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	4a13      	ldr	r2, [pc, #76]	@ (8000430 <GPIO_PeriClockControl+0x198>)
 80003e2:	4293      	cmp	r3, r2
 80003e4:	d106      	bne.n	80003f4 <GPIO_PeriClockControl+0x15c>
			GPIOG_PERI_CLOCK_DISABLE();
 80003e6:	4b0c      	ldr	r3, [pc, #48]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 80003e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003ea:	4a0b      	ldr	r2, [pc, #44]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 80003ec:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80003f0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003f2:	e009      	b.n	8000408 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOH)
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	4a0f      	ldr	r2, [pc, #60]	@ (8000434 <GPIO_PeriClockControl+0x19c>)
 80003f8:	4293      	cmp	r3, r2
 80003fa:	d105      	bne.n	8000408 <GPIO_PeriClockControl+0x170>
			GPIOH_PERI_CLOCK_DISABLE();
 80003fc:	4b06      	ldr	r3, [pc, #24]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 80003fe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000400:	4a05      	ldr	r2, [pc, #20]	@ (8000418 <GPIO_PeriClockControl+0x180>)
 8000402:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000406:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000408:	bf00      	nop
 800040a:	370c      	adds	r7, #12
 800040c:	46bd      	mov	sp, r7
 800040e:	bc80      	pop	{r7}
 8000410:	4770      	bx	lr
 8000412:	bf00      	nop
 8000414:	40020000 	.word	0x40020000
 8000418:	40023800 	.word	0x40023800
 800041c:	40020400 	.word	0x40020400
 8000420:	40020800 	.word	0x40020800
 8000424:	40020c00 	.word	0x40020c00
 8000428:	40021000 	.word	0x40021000
 800042c:	40021400 	.word	0x40021400
 8000430:	40021800 	.word	0x40021800
 8000434:	40021c00 	.word	0x40021c00

08000438 <GPIO_Init>:
 *
 * @return                 -None
 * */

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000438:	b580      	push	{r7, lr}
 800043a:	b086      	sub	sp, #24
 800043c:	af00      	add	r7, sp, #0
 800043e:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 8000440:	2300      	movs	r3, #0
 8000442:	617b      	str	r3, [r7, #20]
	//1.- Configure the mode of GPIO pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	795b      	ldrb	r3, [r3, #5]
 8000448:	2b03      	cmp	r3, #3
 800044a:	d820      	bhi.n	800048e <GPIO_Init+0x56>
	{
		//temp = (config << position)
		//temp = (PinMode << PinNumber)
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //Example (Output 1) << (2 * (PinNumber 2)) = 4 so (1 << 4)
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	795b      	ldrb	r3, [r3, #5]
 8000450:	461a      	mov	r2, r3
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	791b      	ldrb	r3, [r3, #4]
 8000456:	005b      	lsls	r3, r3, #1
 8000458:	fa02 f303 	lsl.w	r3, r2, r3
 800045c:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->GPIOx_MODER &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //Clear first
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	681b      	ldr	r3, [r3, #0]
 8000462:	681a      	ldr	r2, [r3, #0]
 8000464:	687b      	ldr	r3, [r7, #4]
 8000466:	791b      	ldrb	r3, [r3, #4]
 8000468:	005b      	lsls	r3, r3, #1
 800046a:	2103      	movs	r1, #3
 800046c:	fa01 f303 	lsl.w	r3, r1, r3
 8000470:	43db      	mvns	r3, r3
 8000472:	4619      	mov	r1, r3
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	681b      	ldr	r3, [r3, #0]
 8000478:	400a      	ands	r2, r1
 800047a:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->GPIOx_MODER |= temp;
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	6819      	ldr	r1, [r3, #0]
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	681b      	ldr	r3, [r3, #0]
 8000486:	697a      	ldr	r2, [r7, #20]
 8000488:	430a      	orrs	r2, r1
 800048a:	601a      	str	r2, [r3, #0]
 800048c:	e0d7      	b.n	800063e <GPIO_Init+0x206>
	}
	else
	{
		temp = 0;
 800048e:	2300      	movs	r3, #0
 8000490:	617b      	str	r3, [r7, #20]
		//EXTI
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	795b      	ldrb	r3, [r3, #5]
 8000496:	2b04      	cmp	r3, #4
 8000498:	d130      	bne.n	80004fc <GPIO_Init+0xc4>
		{
			temp = (GPIO_MODE_INPUT << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800049a:	2300      	movs	r3, #0
 800049c:	617b      	str	r3, [r7, #20]
			pGPIOHandle->pGPIOx->GPIOx_MODER &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //Clear first
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	681b      	ldr	r3, [r3, #0]
 80004a2:	681a      	ldr	r2, [r3, #0]
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	791b      	ldrb	r3, [r3, #4]
 80004a8:	005b      	lsls	r3, r3, #1
 80004aa:	2103      	movs	r1, #3
 80004ac:	fa01 f303 	lsl.w	r3, r1, r3
 80004b0:	43db      	mvns	r3, r3
 80004b2:	4619      	mov	r1, r3
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	400a      	ands	r2, r1
 80004ba:	601a      	str	r2, [r3, #0]
			pGPIOHandle->pGPIOx->GPIOx_MODER |= temp;
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	681b      	ldr	r3, [r3, #0]
 80004c0:	6819      	ldr	r1, [r3, #0]
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	681b      	ldr	r3, [r3, #0]
 80004c6:	697a      	ldr	r2, [r7, #20]
 80004c8:	430a      	orrs	r2, r1
 80004ca:	601a      	str	r2, [r3, #0]
			//1.- Configure the FTSR
			EXTI->EXTI_FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004cc:	4b26      	ldr	r3, [pc, #152]	@ (8000568 <GPIO_Init+0x130>)
 80004ce:	68db      	ldr	r3, [r3, #12]
 80004d0:	687a      	ldr	r2, [r7, #4]
 80004d2:	7912      	ldrb	r2, [r2, #4]
 80004d4:	4611      	mov	r1, r2
 80004d6:	2201      	movs	r2, #1
 80004d8:	408a      	lsls	r2, r1
 80004da:	4611      	mov	r1, r2
 80004dc:	4a22      	ldr	r2, [pc, #136]	@ (8000568 <GPIO_Init+0x130>)
 80004de:	430b      	orrs	r3, r1
 80004e0:	60d3      	str	r3, [r2, #12]
			//2.- Clear RTSR
			EXTI->EXTI_RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004e2:	4b21      	ldr	r3, [pc, #132]	@ (8000568 <GPIO_Init+0x130>)
 80004e4:	689b      	ldr	r3, [r3, #8]
 80004e6:	687a      	ldr	r2, [r7, #4]
 80004e8:	7912      	ldrb	r2, [r2, #4]
 80004ea:	4611      	mov	r1, r2
 80004ec:	2201      	movs	r2, #1
 80004ee:	408a      	lsls	r2, r1
 80004f0:	43d2      	mvns	r2, r2
 80004f2:	4611      	mov	r1, r2
 80004f4:	4a1c      	ldr	r2, [pc, #112]	@ (8000568 <GPIO_Init+0x130>)
 80004f6:	400b      	ands	r3, r1
 80004f8:	6093      	str	r3, [r2, #8]
 80004fa:	e06a      	b.n	80005d2 <GPIO_Init+0x19a>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	795b      	ldrb	r3, [r3, #5]
 8000500:	2b05      	cmp	r3, #5
 8000502:	d133      	bne.n	800056c <GPIO_Init+0x134>
		{
			temp = (GPIO_MODE_INPUT << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000504:	2300      	movs	r3, #0
 8000506:	617b      	str	r3, [r7, #20]
			pGPIOHandle->pGPIOx->GPIOx_MODER &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //Clear first
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	681a      	ldr	r2, [r3, #0]
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	791b      	ldrb	r3, [r3, #4]
 8000512:	005b      	lsls	r3, r3, #1
 8000514:	2103      	movs	r1, #3
 8000516:	fa01 f303 	lsl.w	r3, r1, r3
 800051a:	43db      	mvns	r3, r3
 800051c:	4619      	mov	r1, r3
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	681b      	ldr	r3, [r3, #0]
 8000522:	400a      	ands	r2, r1
 8000524:	601a      	str	r2, [r3, #0]
			pGPIOHandle->pGPIOx->GPIOx_MODER |= temp;
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	681b      	ldr	r3, [r3, #0]
 800052a:	6819      	ldr	r1, [r3, #0]
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	681b      	ldr	r3, [r3, #0]
 8000530:	697a      	ldr	r2, [r7, #20]
 8000532:	430a      	orrs	r2, r1
 8000534:	601a      	str	r2, [r3, #0]
			//1.- Configure the RTSR
			EXTI->EXTI_RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000536:	4b0c      	ldr	r3, [pc, #48]	@ (8000568 <GPIO_Init+0x130>)
 8000538:	689b      	ldr	r3, [r3, #8]
 800053a:	687a      	ldr	r2, [r7, #4]
 800053c:	7912      	ldrb	r2, [r2, #4]
 800053e:	4611      	mov	r1, r2
 8000540:	2201      	movs	r2, #1
 8000542:	408a      	lsls	r2, r1
 8000544:	4611      	mov	r1, r2
 8000546:	4a08      	ldr	r2, [pc, #32]	@ (8000568 <GPIO_Init+0x130>)
 8000548:	430b      	orrs	r3, r1
 800054a:	6093      	str	r3, [r2, #8]
			//2.- Clear FTSR
			EXTI->EXTI_FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800054c:	4b06      	ldr	r3, [pc, #24]	@ (8000568 <GPIO_Init+0x130>)
 800054e:	68db      	ldr	r3, [r3, #12]
 8000550:	687a      	ldr	r2, [r7, #4]
 8000552:	7912      	ldrb	r2, [r2, #4]
 8000554:	4611      	mov	r1, r2
 8000556:	2201      	movs	r2, #1
 8000558:	408a      	lsls	r2, r1
 800055a:	43d2      	mvns	r2, r2
 800055c:	4611      	mov	r1, r2
 800055e:	4a02      	ldr	r2, [pc, #8]	@ (8000568 <GPIO_Init+0x130>)
 8000560:	400b      	ands	r3, r1
 8000562:	60d3      	str	r3, [r2, #12]
 8000564:	e035      	b.n	80005d2 <GPIO_Init+0x19a>
 8000566:	bf00      	nop
 8000568:	40013c00 	.word	0x40013c00
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT_RT)
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	795b      	ldrb	r3, [r3, #5]
 8000570:	2b06      	cmp	r3, #6
 8000572:	d12e      	bne.n	80005d2 <GPIO_Init+0x19a>
		{
			temp = (GPIO_MODE_INPUT << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000574:	2300      	movs	r3, #0
 8000576:	617b      	str	r3, [r7, #20]
			pGPIOHandle->pGPIOx->GPIOx_MODER &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //Clear first
 8000578:	687b      	ldr	r3, [r7, #4]
 800057a:	681b      	ldr	r3, [r3, #0]
 800057c:	681a      	ldr	r2, [r3, #0]
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	791b      	ldrb	r3, [r3, #4]
 8000582:	005b      	lsls	r3, r3, #1
 8000584:	2103      	movs	r1, #3
 8000586:	fa01 f303 	lsl.w	r3, r1, r3
 800058a:	43db      	mvns	r3, r3
 800058c:	4619      	mov	r1, r3
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	681b      	ldr	r3, [r3, #0]
 8000592:	400a      	ands	r2, r1
 8000594:	601a      	str	r2, [r3, #0]
			pGPIOHandle->pGPIOx->GPIOx_MODER |= temp;
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	681b      	ldr	r3, [r3, #0]
 800059a:	6819      	ldr	r1, [r3, #0]
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	681b      	ldr	r3, [r3, #0]
 80005a0:	697a      	ldr	r2, [r7, #20]
 80005a2:	430a      	orrs	r2, r1
 80005a4:	601a      	str	r2, [r3, #0]
			//1.- Configure the FTSR
			EXTI->EXTI_FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005a6:	4b77      	ldr	r3, [pc, #476]	@ (8000784 <GPIO_Init+0x34c>)
 80005a8:	68db      	ldr	r3, [r3, #12]
 80005aa:	687a      	ldr	r2, [r7, #4]
 80005ac:	7912      	ldrb	r2, [r2, #4]
 80005ae:	4611      	mov	r1, r2
 80005b0:	2201      	movs	r2, #1
 80005b2:	408a      	lsls	r2, r1
 80005b4:	4611      	mov	r1, r2
 80005b6:	4a73      	ldr	r2, [pc, #460]	@ (8000784 <GPIO_Init+0x34c>)
 80005b8:	430b      	orrs	r3, r1
 80005ba:	60d3      	str	r3, [r2, #12]
			//2.- Configure the RTSR
			EXTI->EXTI_RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005bc:	4b71      	ldr	r3, [pc, #452]	@ (8000784 <GPIO_Init+0x34c>)
 80005be:	689b      	ldr	r3, [r3, #8]
 80005c0:	687a      	ldr	r2, [r7, #4]
 80005c2:	7912      	ldrb	r2, [r2, #4]
 80005c4:	4611      	mov	r1, r2
 80005c6:	2201      	movs	r2, #1
 80005c8:	408a      	lsls	r2, r1
 80005ca:	4611      	mov	r1, r2
 80005cc:	4a6d      	ldr	r2, [pc, #436]	@ (8000784 <GPIO_Init+0x34c>)
 80005ce:	430b      	orrs	r3, r1
 80005d0:	6093      	str	r3, [r2, #8]
		}

		// Configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t tmp1 = 0,tmp2 = 0;
 80005d2:	2300      	movs	r3, #0
 80005d4:	74fb      	strb	r3, [r7, #19]
 80005d6:	2300      	movs	r3, #0
 80005d8:	74bb      	strb	r3, [r7, #18]
		//Calculate the register to write PinNumber/ElementsInRegister
		tmp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	791b      	ldrb	r3, [r3, #4]
 80005de:	089b      	lsrs	r3, r3, #2
 80005e0:	74fb      	strb	r3, [r7, #19]
		//Calculate position
		tmp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	791b      	ldrb	r3, [r3, #4]
 80005e6:	f003 0303 	and.w	r3, r3, #3
 80005ea:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	4618      	mov	r0, r3
 80005f2:	f7ff fe07 	bl	8000204 <GPIO_BASEADDR_TO_CODE>
 80005f6:	4603      	mov	r3, r0
 80005f8:	747b      	strb	r3, [r7, #17]
		SYSCFG_PERI_CLOCK_ENABLE();
 80005fa:	4b63      	ldr	r3, [pc, #396]	@ (8000788 <GPIO_Init+0x350>)
 80005fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80005fe:	4a62      	ldr	r2, [pc, #392]	@ (8000788 <GPIO_Init+0x350>)
 8000600:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000604:	6453      	str	r3, [r2, #68]	@ 0x44
		//Select input for EXTI LINE
		SYSCFG->SYSCFG_EXTICR[tmp1] |= (portcode << (tmp2 * 4));
 8000606:	4a61      	ldr	r2, [pc, #388]	@ (800078c <GPIO_Init+0x354>)
 8000608:	7cfb      	ldrb	r3, [r7, #19]
 800060a:	3302      	adds	r3, #2
 800060c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000610:	7c79      	ldrb	r1, [r7, #17]
 8000612:	7cbb      	ldrb	r3, [r7, #18]
 8000614:	009b      	lsls	r3, r3, #2
 8000616:	fa01 f303 	lsl.w	r3, r1, r3
 800061a:	4618      	mov	r0, r3
 800061c:	495b      	ldr	r1, [pc, #364]	@ (800078c <GPIO_Init+0x354>)
 800061e:	7cfb      	ldrb	r3, [r7, #19]
 8000620:	4302      	orrs	r2, r0
 8000622:	3302      	adds	r3, #2
 8000624:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		// Enable the EXTI interrupt delivery using IMR
		EXTI->EXTI_IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000628:	4b56      	ldr	r3, [pc, #344]	@ (8000784 <GPIO_Init+0x34c>)
 800062a:	681b      	ldr	r3, [r3, #0]
 800062c:	687a      	ldr	r2, [r7, #4]
 800062e:	7912      	ldrb	r2, [r2, #4]
 8000630:	4611      	mov	r1, r2
 8000632:	2201      	movs	r2, #1
 8000634:	408a      	lsls	r2, r1
 8000636:	4611      	mov	r1, r2
 8000638:	4a52      	ldr	r2, [pc, #328]	@ (8000784 <GPIO_Init+0x34c>)
 800063a:	430b      	orrs	r3, r1
 800063c:	6013      	str	r3, [r2, #0]

	}
	temp = 0;
 800063e:	2300      	movs	r3, #0
 8000640:	617b      	str	r3, [r7, #20]
	//2.- Configure the speed of GPIO pin
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	799b      	ldrb	r3, [r3, #6]
 8000646:	461a      	mov	r2, r3
 8000648:	687b      	ldr	r3, [r7, #4]
 800064a:	791b      	ldrb	r3, [r3, #4]
 800064c:	005b      	lsls	r3, r3, #1
 800064e:	fa02 f303 	lsl.w	r3, r2, r3
 8000652:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->GPIOx_OSPEEDR &= (0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //Clear first
 8000654:	687b      	ldr	r3, [r7, #4]
 8000656:	681b      	ldr	r3, [r3, #0]
 8000658:	689a      	ldr	r2, [r3, #8]
 800065a:	687b      	ldr	r3, [r7, #4]
 800065c:	791b      	ldrb	r3, [r3, #4]
 800065e:	005b      	lsls	r3, r3, #1
 8000660:	2103      	movs	r1, #3
 8000662:	fa01 f303 	lsl.w	r3, r1, r3
 8000666:	4619      	mov	r1, r3
 8000668:	687b      	ldr	r3, [r7, #4]
 800066a:	681b      	ldr	r3, [r3, #0]
 800066c:	400a      	ands	r2, r1
 800066e:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->GPIOx_OSPEEDR |= temp;
 8000670:	687b      	ldr	r3, [r7, #4]
 8000672:	681b      	ldr	r3, [r3, #0]
 8000674:	6899      	ldr	r1, [r3, #8]
 8000676:	687b      	ldr	r3, [r7, #4]
 8000678:	681b      	ldr	r3, [r3, #0]
 800067a:	697a      	ldr	r2, [r7, #20]
 800067c:	430a      	orrs	r2, r1
 800067e:	609a      	str	r2, [r3, #8]

	temp = 0;
 8000680:	2300      	movs	r3, #0
 8000682:	617b      	str	r3, [r7, #20]
	//3.- Configure the PUPD of GPIO pin
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000684:	687b      	ldr	r3, [r7, #4]
 8000686:	79db      	ldrb	r3, [r3, #7]
 8000688:	461a      	mov	r2, r3
 800068a:	687b      	ldr	r3, [r7, #4]
 800068c:	791b      	ldrb	r3, [r3, #4]
 800068e:	005b      	lsls	r3, r3, #1
 8000690:	fa02 f303 	lsl.w	r3, r2, r3
 8000694:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->GPIOx_PUPDR &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //Clear first
 8000696:	687b      	ldr	r3, [r7, #4]
 8000698:	681b      	ldr	r3, [r3, #0]
 800069a:	68da      	ldr	r2, [r3, #12]
 800069c:	687b      	ldr	r3, [r7, #4]
 800069e:	791b      	ldrb	r3, [r3, #4]
 80006a0:	005b      	lsls	r3, r3, #1
 80006a2:	2103      	movs	r1, #3
 80006a4:	fa01 f303 	lsl.w	r3, r1, r3
 80006a8:	43db      	mvns	r3, r3
 80006aa:	4619      	mov	r1, r3
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	681b      	ldr	r3, [r3, #0]
 80006b0:	400a      	ands	r2, r1
 80006b2:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->GPIOx_PUPDR |= temp;
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	681b      	ldr	r3, [r3, #0]
 80006b8:	68d9      	ldr	r1, [r3, #12]
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	681b      	ldr	r3, [r3, #0]
 80006be:	697a      	ldr	r2, [r7, #20]
 80006c0:	430a      	orrs	r2, r1
 80006c2:	60da      	str	r2, [r3, #12]

	temp = 0;
 80006c4:	2300      	movs	r3, #0
 80006c6:	617b      	str	r3, [r7, #20]
	//4.- Configure the OTYPE of GPIO pin
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006c8:	687b      	ldr	r3, [r7, #4]
 80006ca:	7a1b      	ldrb	r3, [r3, #8]
 80006cc:	461a      	mov	r2, r3
 80006ce:	687b      	ldr	r3, [r7, #4]
 80006d0:	791b      	ldrb	r3, [r3, #4]
 80006d2:	fa02 f303 	lsl.w	r3, r2, r3
 80006d6:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->GPIOx_OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006d8:	687b      	ldr	r3, [r7, #4]
 80006da:	681b      	ldr	r3, [r3, #0]
 80006dc:	685a      	ldr	r2, [r3, #4]
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	791b      	ldrb	r3, [r3, #4]
 80006e2:	4619      	mov	r1, r3
 80006e4:	2301      	movs	r3, #1
 80006e6:	408b      	lsls	r3, r1
 80006e8:	43db      	mvns	r3, r3
 80006ea:	4619      	mov	r1, r3
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	681b      	ldr	r3, [r3, #0]
 80006f0:	400a      	ands	r2, r1
 80006f2:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->GPIOx_OTYPER |= temp;
 80006f4:	687b      	ldr	r3, [r7, #4]
 80006f6:	681b      	ldr	r3, [r3, #0]
 80006f8:	6859      	ldr	r1, [r3, #4]
 80006fa:	687b      	ldr	r3, [r7, #4]
 80006fc:	681b      	ldr	r3, [r3, #0]
 80006fe:	697a      	ldr	r2, [r7, #20]
 8000700:	430a      	orrs	r2, r1
 8000702:	605a      	str	r2, [r3, #4]

	temp = 0;
 8000704:	2300      	movs	r3, #0
 8000706:	617b      	str	r3, [r7, #20]
	//5.- Configure the ALTF of GPIO pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFUN)
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	795b      	ldrb	r3, [r3, #5]
 800070c:	2b02      	cmp	r3, #2
 800070e:	d135      	bne.n	800077c <GPIO_Init+0x344>
	{
		uint8_t temp1= 0 ,temp2 = 0;
 8000710:	2300      	movs	r3, #0
 8000712:	743b      	strb	r3, [r7, #16]
 8000714:	2300      	movs	r3, #0
 8000716:	73fb      	strb	r3, [r7, #15]
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8; //Register Low or High
 8000718:	687b      	ldr	r3, [r7, #4]
 800071a:	791b      	ldrb	r3, [r3, #4]
 800071c:	08db      	lsrs	r3, r3, #3
 800071e:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8; //Position
 8000720:	687b      	ldr	r3, [r7, #4]
 8000722:	791b      	ldrb	r3, [r3, #4]
 8000724:	f003 0307 	and.w	r3, r3, #7
 8000728:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->GPIOx_AFR[temp1] &= ~(0xF << (4 * temp2));
 800072a:	687b      	ldr	r3, [r7, #4]
 800072c:	681b      	ldr	r3, [r3, #0]
 800072e:	7c3a      	ldrb	r2, [r7, #16]
 8000730:	3208      	adds	r2, #8
 8000732:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000736:	7bfb      	ldrb	r3, [r7, #15]
 8000738:	009b      	lsls	r3, r3, #2
 800073a:	220f      	movs	r2, #15
 800073c:	fa02 f303 	lsl.w	r3, r2, r3
 8000740:	43db      	mvns	r3, r3
 8000742:	4618      	mov	r0, r3
 8000744:	687b      	ldr	r3, [r7, #4]
 8000746:	681b      	ldr	r3, [r3, #0]
 8000748:	7c3a      	ldrb	r2, [r7, #16]
 800074a:	4001      	ands	r1, r0
 800074c:	3208      	adds	r2, #8
 800074e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->GPIOx_AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 8000752:	687b      	ldr	r3, [r7, #4]
 8000754:	681b      	ldr	r3, [r3, #0]
 8000756:	7c3a      	ldrb	r2, [r7, #16]
 8000758:	3208      	adds	r2, #8
 800075a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800075e:	687b      	ldr	r3, [r7, #4]
 8000760:	7a5b      	ldrb	r3, [r3, #9]
 8000762:	461a      	mov	r2, r3
 8000764:	7bfb      	ldrb	r3, [r7, #15]
 8000766:	009b      	lsls	r3, r3, #2
 8000768:	fa02 f303 	lsl.w	r3, r2, r3
 800076c:	4618      	mov	r0, r3
 800076e:	687b      	ldr	r3, [r7, #4]
 8000770:	681b      	ldr	r3, [r3, #0]
 8000772:	7c3a      	ldrb	r2, [r7, #16]
 8000774:	4301      	orrs	r1, r0
 8000776:	3208      	adds	r2, #8
 8000778:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 800077c:	bf00      	nop
 800077e:	3718      	adds	r7, #24
 8000780:	46bd      	mov	sp, r7
 8000782:	bd80      	pop	{r7, pc}
 8000784:	40013c00 	.word	0x40013c00
 8000788:	40023800 	.word	0x40023800
 800078c:	40013800 	.word	0x40013800

08000790 <main>:

void GPIOx_Init(void);
void Clock_Init(void);

int main(void)
{
 8000790:	b580      	push	{r7, lr}
 8000792:	af00      	add	r7, sp, #0

	/*GPIOs Initializations*/
	GPIOx_Init();
 8000794:	f000 f802 	bl	800079c <GPIOx_Init>

	/*Set MSP to point to scheduler task*/
	__attribute__ ((naked)) void init_scheduler_stack(uint32_t scheduler_stack_start);

	while(1)
 8000798:	bf00      	nop
 800079a:	e7fd      	b.n	8000798 <main+0x8>

0800079c <GPIOx_Init>:

	}
}

void GPIOx_Init(void)
{
 800079c:	b580      	push	{r7, lr}
 800079e:	b084      	sub	sp, #16
 80007a0:	af00      	add	r7, sp, #0
	GPIO_PeriClockControl(GPIOA, ENABLE);
 80007a2:	2101      	movs	r1, #1
 80007a4:	480f      	ldr	r0, [pc, #60]	@ (80007e4 <GPIOx_Init+0x48>)
 80007a6:	f7ff fd77 	bl	8000298 <GPIO_PeriClockControl>

	GPIO_Handle_t GPIO_LED_struct;

	memset(&GPIO_LED_struct, 0, sizeof(GPIO_LED_struct));
 80007aa:	1d3b      	adds	r3, r7, #4
 80007ac:	220c      	movs	r2, #12
 80007ae:	2100      	movs	r1, #0
 80007b0:	4618      	mov	r0, r3
 80007b2:	f000 f842 	bl	800083a <memset>
	GPIO_LED_struct.pGPIOx = GPIOA;
 80007b6:	4b0b      	ldr	r3, [pc, #44]	@ (80007e4 <GPIOx_Init+0x48>)
 80007b8:	607b      	str	r3, [r7, #4]
	GPIO_LED_struct.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUTPUT;
 80007ba:	2301      	movs	r3, #1
 80007bc:	727b      	strb	r3, [r7, #9]
	GPIO_LED_struct.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_5;
 80007be:	2305      	movs	r3, #5
 80007c0:	723b      	strb	r3, [r7, #8]
	GPIO_LED_struct.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 80007c2:	2300      	movs	r3, #0
 80007c4:	72bb      	strb	r3, [r7, #10]
	GPIO_LED_struct.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PUPD_NOPUPD;
 80007c6:	2300      	movs	r3, #0
 80007c8:	72fb      	strb	r3, [r7, #11]
	GPIO_LED_struct.GPIO_PinConfig.GPIO_PinOPType = GPIO_OUTPUT_PP;
 80007ca:	2300      	movs	r3, #0
 80007cc:	733b      	strb	r3, [r7, #12]
	GPIO_LED_struct.GPIO_PinConfig.GPIO_PinAltFunMode = 0;
 80007ce:	2300      	movs	r3, #0
 80007d0:	737b      	strb	r3, [r7, #13]

	GPIO_Init(&GPIO_LED_struct);
 80007d2:	1d3b      	adds	r3, r7, #4
 80007d4:	4618      	mov	r0, r3
 80007d6:	f7ff fe2f 	bl	8000438 <GPIO_Init>
}
 80007da:	bf00      	nop
 80007dc:	3710      	adds	r7, #16
 80007de:	46bd      	mov	sp, r7
 80007e0:	bd80      	pop	{r7, pc}
 80007e2:	bf00      	nop
 80007e4:	40020000 	.word	0x40020000

080007e8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80007e8:	480d      	ldr	r0, [pc, #52]	@ (8000820 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80007ea:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80007ec:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80007f0:	480c      	ldr	r0, [pc, #48]	@ (8000824 <LoopForever+0x6>)
  ldr r1, =_edata
 80007f2:	490d      	ldr	r1, [pc, #52]	@ (8000828 <LoopForever+0xa>)
  ldr r2, =_sidata
 80007f4:	4a0d      	ldr	r2, [pc, #52]	@ (800082c <LoopForever+0xe>)
  movs r3, #0
 80007f6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80007f8:	e002      	b.n	8000800 <LoopCopyDataInit>

080007fa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80007fa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80007fc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80007fe:	3304      	adds	r3, #4

08000800 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000800:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000802:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000804:	d3f9      	bcc.n	80007fa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000806:	4a0a      	ldr	r2, [pc, #40]	@ (8000830 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000808:	4c0a      	ldr	r4, [pc, #40]	@ (8000834 <LoopForever+0x16>)
  movs r3, #0
 800080a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800080c:	e001      	b.n	8000812 <LoopFillZerobss>

0800080e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800080e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000810:	3204      	adds	r2, #4

08000812 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000812:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000814:	d3fb      	bcc.n	800080e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000816:	f000 f819 	bl	800084c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800081a:	f7ff ffb9 	bl	8000790 <main>

0800081e <LoopForever>:

LoopForever:
  b LoopForever
 800081e:	e7fe      	b.n	800081e <LoopForever>
  ldr   r0, =_estack
 8000820:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000824:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000828:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800082c:	080008b4 	.word	0x080008b4
  ldr r2, =_sbss
 8000830:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000834:	2000001c 	.word	0x2000001c

08000838 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000838:	e7fe      	b.n	8000838 <ADC_IRQHandler>

0800083a <memset>:
 800083a:	4402      	add	r2, r0
 800083c:	4603      	mov	r3, r0
 800083e:	4293      	cmp	r3, r2
 8000840:	d100      	bne.n	8000844 <memset+0xa>
 8000842:	4770      	bx	lr
 8000844:	f803 1b01 	strb.w	r1, [r3], #1
 8000848:	e7f9      	b.n	800083e <memset+0x4>
	...

0800084c <__libc_init_array>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	4d0d      	ldr	r5, [pc, #52]	@ (8000884 <__libc_init_array+0x38>)
 8000850:	4c0d      	ldr	r4, [pc, #52]	@ (8000888 <__libc_init_array+0x3c>)
 8000852:	1b64      	subs	r4, r4, r5
 8000854:	10a4      	asrs	r4, r4, #2
 8000856:	2600      	movs	r6, #0
 8000858:	42a6      	cmp	r6, r4
 800085a:	d109      	bne.n	8000870 <__libc_init_array+0x24>
 800085c:	4d0b      	ldr	r5, [pc, #44]	@ (800088c <__libc_init_array+0x40>)
 800085e:	4c0c      	ldr	r4, [pc, #48]	@ (8000890 <__libc_init_array+0x44>)
 8000860:	f000 f818 	bl	8000894 <_init>
 8000864:	1b64      	subs	r4, r4, r5
 8000866:	10a4      	asrs	r4, r4, #2
 8000868:	2600      	movs	r6, #0
 800086a:	42a6      	cmp	r6, r4
 800086c:	d105      	bne.n	800087a <__libc_init_array+0x2e>
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f855 3b04 	ldr.w	r3, [r5], #4
 8000874:	4798      	blx	r3
 8000876:	3601      	adds	r6, #1
 8000878:	e7ee      	b.n	8000858 <__libc_init_array+0xc>
 800087a:	f855 3b04 	ldr.w	r3, [r5], #4
 800087e:	4798      	blx	r3
 8000880:	3601      	adds	r6, #1
 8000882:	e7f2      	b.n	800086a <__libc_init_array+0x1e>
 8000884:	080008ac 	.word	0x080008ac
 8000888:	080008ac 	.word	0x080008ac
 800088c:	080008ac 	.word	0x080008ac
 8000890:	080008b0 	.word	0x080008b0

08000894 <_init>:
 8000894:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000896:	bf00      	nop
 8000898:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800089a:	bc08      	pop	{r3}
 800089c:	469e      	mov	lr, r3
 800089e:	4770      	bx	lr

080008a0 <_fini>:
 80008a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008a2:	bf00      	nop
 80008a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008a6:	bc08      	pop	{r3}
 80008a8:	469e      	mov	lr, r3
 80008aa:	4770      	bx	lr
